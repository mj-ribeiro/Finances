'GOLL4.SA',
'IGTA3.SA',
'HGTX3.SA',
'MRFG3.SA',
'ECOR3.SA',
'SMLS3.SA')
ativos = ('ITUB4.SA','VALE3.SA')
ativos = c('ITUB4.SA',
'VALE3.SA',
'BBDC4.SA',
'PETR4.SA',
'B3SA3.SA',
'PETR3.SA',
'ABEV3.SA',
'BBAS3.SA',
'ITSA4.SA',
'LREN3.SA',
'JBSS3.SA',
'BBDC3.SA',
'IRBR3.SA',
'GNDI3.SA',
'MGLU3.SA',
'SUZB3.SA',
'BRFS3.SA',
'UGPA3.SA',
'RENT3.SA',
'RAIL3.SA',
'WEGE3.SA',
'BBSE3.SA',
'RADL3.SA',
'VIVT4.SA',
'EQTL3.SA',
'BRDT3.SA',
'GGBR4.SA',
'CCRO3.SA',
'SBSP3.SA',
'LAME4.SA',
'COGN3.SA',
'SULA11.SA',
'AZUL4.SA',
'SANB11.SA',
'BRML3.SA',
'EMBR3.SA',
'HAPV3.SA',
'HYPE3.SA',
'BPAC11.SA',
'NTCO3.SA',
'PCAR4.SA',
'YDUQ3.SA',
'EGIE3.SA',
'CMIG4.SA',
'VVAR3.SA',
'TIMP3.SA',
'BTOW3.SA',
'KLBN11.SA',
'ELET3.SA',
'QUAL3.SA',
'CSAN3.SA',
'TOTS3.SA',
'CIEL3.SA',
'CRFB3.SA',
'CSNA3.SA',
'FLRY3.SA',
'MULT3.SA',
'ELET6.SA',
'CYRE3.SA',
'BRAP4.SA',
'BRKM5.SA',
'TAEE11.SA',
'ENBR3.SA',
'GOAU4.SA',
'MRVE3.SA',
'CVCB3.SA',
'USIM5.SA',
'GOLL4.SA',
'IGTA3.SA',
'HGTX3.SA',
'MRFG3.SA',
'ECOR3.SA',
'SMLS3.SA')
know_data = function(z){
get_data(z)
s = index(z)[1]
return(s)
}
x = lapply(ativos, know_data)
View(x)
x[[1]]
x[[2]]
s = c()
know_data = function(z){
s = c()
get_data(z)
s = index(z)[1]
return(s)
}
x = lapply(ativos, know_data)
View(x)
know_data = function(z){
s = as.Date(c())
get_data(z)
s = index(z)[1]
return(s)
}
x = lapply(ativos, know_data)
know_data = function(z){
s = c()
get_data(z)
s = as.Date(index(z)[1])
return(s)
}
x = lapply(ativos, know_data)
View(x)
petr = get_data(PETR4)
petr = get_data(PETR4.SA)
petr = get_data('PETR4.SA')
View(petr)
str(index(petr))
index(petr)[1]
dp = index(petr)[1:10]
View(dp)
know_data = function(z){
s = c()
get_data(z)
s = as.Date(index(z)[1], format = '%d/%m/%Y')
return(s)
}
x = lapply(ativos, know_data)
View(x)
warnings()
know_data = function(z){
get_data(z)
s = c(as.Date(index(z)[1]))
return(s)
}
x = lapply(ativos, know_data)
View(x)
typeof(x)
typeof(x[1])
typeof(dp)
class(dp)
s = matrix(nrow = length(assets), ncol = 1)
typeof(x[1])
know_data = function(z){
get_data(z)
s = as.Date(index(z)[1], "%m/%d/%Y")
return(s)
}
x = lapply(ativos, know_data)
s = matrix(nrow = length(assets), ncol = 1)
know_data = function(z){
get_data(z)
s = strptime(index(z)[1], format = "%m/%d/%Y")
return(s)
}
x = lapply(ativos, know_data)
View(x)
x[[1]]
s = matrix(nrow = length(assets), ncol = 1)
know_data = function(z){
k= get_data(z)
s = strptime(index(k))[1], format = "%m/%d/%Y")
return(s)
}
x = lapply(ativos, know_data)
View(x)
s = matrix(nrow = length(assets), ncol = 1)
know_data = function(z){
k= get_data(z)
s = strptime(index(k))[1], format = "%d/%m/%Y")
return(s)
}
x = lapply(ativos, know_data)
View(x)
x[[1]]
rm(x)
s = matrix(nrow = length(assets), ncol = 1)
know_data = function(z){
k= get_data(z)
s = strptime(index(k))[1], format = "%Y/%m/%d")
return(s)
}
x = lapply(ativos, know_data)
s = matrix(nrow = length(ativos), ncol = 1)
know_data = function(z){
k= get_data(z)
s = strptime(index(k))[1], format = "%Y/%m/%d")
return(s)
}
x = lapply(ativos, know_data)
View(x)
x[[1]]
s = matrix(nrow = length(ativos), ncol = 1)
know_data = function(z){
k= get_data(z)
s = (index(k))[1])
return(s)
}
x = lapply(ativos, know_data)
View(x)
x[[1]]
]
rm(x)
s = data.frame(matrix(nrow = length(ativos), ncol = 1))
know_data = function(z){
k= get_data(z)
s = index(k)[1]
return(s)
}
x = lapply(ativos, know_data)
x = data.frame(lapply(ativos, know_data))
View(x)
x = data.frame(matrix(nrow = length(ativos), ncol = 1))
x = data.frame(lapply(ativos, know_data))
View(x)
x = data.frame(matrix(lapply(ativos, know_data), nrow = length(ativos), ncol = 1))
View(x)
View(x)
x = data.frame(matrix(as.Date(lapply(ativos, know_data)),
nrow = length(ativos),
ncol = 1))
View(x)
typeof(x)
class(x)
x = matrix(as.Date(lapply(ativos, know_data)),
nrow = length(ativos),
ncol = 1)
View(x)
x = lapply(ativos, know_data)
View(x)
x
x[1:3]
View(x)
typeof(x)
class(x)
x = as.Date(x)
x = strptime(x)
x = strptime(x, format = "%Y/%m/%d")
View(x)
x[[2]]
x = lapply(ativos, know_data)
View(x)
t = as.Date(x)
class(x)
out <- strptime(x, "%Y.%m.%d")
rm(out)
out =as.Date(x, "%Y.%m.%d")
View(x)
x$value
x$Value
x
t = data.frame(x)
t
View(t)
t = data.frame(x, ncol=1)
View(t)
t = as.Date(x)
out =as.Date(x, "%Y.%m.%d")
View(s)
rm(s)
know_data = function(z){
k= get_data(z)
s = index(k)[1]
return(s)
}
x = lapply(ativos, know_data)
View(x)
typeof(x)
class(x)
x
x[1]
x[1:3]
x[[1:3]]
x[1:3][1]
x[1:3][2]
x[1:3][10]
x[1:3][3]
x[1:3]
str(x)
t = matrix(x)
View(t)
t = data.frame(x)
View(t)
t = data.frame(x).T
t = as.POSIXct(x)
t = as.POSIXct('x')
t = as.POSIXct(x)
t = as.POSIXlt(x)
for (i in ativos) {
know_data(i)
print(s)
}
for (i in ativos) {
print(know_data(i))
}
t = c()
for (i in ativos) {
print(know_data(i))
t[i] = know_data(i)
}
View(t)
out =as.Date(t, "%Y.%m.%d")
class(t)
typeof(t)
library(zoo)
as.Date(t)
View(t)
out = as.Date(t)
View(out)
View(out)
out = as.Date(t, format="%d/%m/%Y")
View(out)
out = as.Date(t)
View(out)
sort(out)
s_val = sort(out)
View(s_val)
View(out)
out = sort(out)
View(out)
get_data = function(x){
z = getSymbols(x, src='yahoo',
from= '1995-01-01',
periodicity = "monthly",
auto.assign = F)[,4]
return(z)
}
know_data = function(z){
k= get_data(z)
s = index(k)[1]
return(s)
}
t = c()
for (i in ativos) {
print(know_data(i))
t[i] = know_data(i)
}
out = as.Date(t)
out = sort(out)
View(out)
get_data = function(x, d){
z = getSymbols(x, src='yahoo',
from= d,
periodicity = "monthly",
auto.assign = F)[,4]
return(z)
}
get_data('PETR4.SA', '1995-01-01')
petr = get_data('PETR4.SA', '1995-01-01')
View(petr)
petr = get_data('PETR4.SA', '1990-01-01')
View(petr)
View(out)
index(out)
index(out$V1)
index(out)
str(index(out))
index(out)
out['PETR4.SA']
out[1:5]
colnames(out)
o = data.frame(out)
View(o)
colnames(o)
View(o)
rownames(o)
rownames(out)
out = data.frame(out)
View(out)
rownames(out)
sort_names = rownames(out)
sort_names[1:10]
sort_names[1:17]
sort_names[1:30]
sort_names[1:23]
get_data = function(x, d= "2000-01-01"){
z = getSymbols(x, src='yahoo',
from= d,
periodicity = "monthly",
auto.assign = F)[,4]
return(z)
}
assets = sort_names[1:23]
df = data.frame(lapply(assets, get_data))
basicStats(df)
mean(df$ENBR3.SA.Close, na.omit=T)
mean(df$ENBR3.SA.Close, omit.na=T)
mean(df$ENBR3.SA.Close)
mean(df$ENBR3.SA.Close, rm.na=T)
mean(df$ENBR3.SA.Close, na.omit=T)
na.omit(mean(df$ENBR3.SA.Close))
mean(df$ENBR3.SA.Close, na.action  =  na.omit)
mean(df$ENBR3.SA.Close, na.rm  =  T)
df$ENBR3.SA.Close = ifelse(df$ENBR3.SA.Close==NA,
mean(df$ENBR3.SA.Close, na.rm =T),
df$ENBR3.SA.Close
)
basicStats(df$ENBR3.SA.Close)
View(df)
x = c(na, 1, 4, 3, 6,22)
x = c(NA, 1, 4, 3, 6,22)
x = ifelse(x==NA,
(mean(x, na.rm =T)),
x)
x
x = c(NA, 1, 4, 3, 6,22)
x = ifelse(x=NA,
(mean(x, na.rm =T)),
x)
(mean(x, na.rm =T))
x = ifelse(x==NA,
7.2,
x)
x
x = c(NA, 1, 4, 3, 6,22)
ifelse(x==NA, 7.2, x)
x = ifelse(x==NA, 7.2, )
x
x = c(NA, 1, 4, 3, 6,22)
ifelse(x==NA, 7.2, 33)
x = ifelse(is.na(x), 7.2, 33)
x
df[,1]
for(i in 1:length(df)){
df[ ,i] = ifelse(is.na(df[,i]),
(mean(df[,i], na.rm = T)),
df[,i] )
}
basicStats(df)
df = data.frame(lapply(assets, get_data))
for(i in 1:length(df)){
df[ ,i] = ifelse(is.na(df[,i]),
(mean(df[,i], na.rm = T)),
df[,i] )
}
basicStats(df)
View(df)
df = df[-245,]
sum((df>0)*1)
sum((df[,1]>0)*1)
nl = sum((df[,1]>0)*1)
df = df[-nl,]
ret = data.frame(matrix(nrow =(nl-1), ncol=length(assets)))
for(i in 1:length(assets)){
ret[ ,i] = diff(log(df[,i]))
}
nl = sum((df[,1]>0)*1)
ret = data.frame(matrix(nrow =(nl-1), ncol=length(assets)))
for(i in 1:length(assets)){
ret[ ,i] = diff(log(df[,i]))
}
View(ret)
colnames(ret) = assets
pca = preProcess(x= ret, method = 'pca', pcaComp = 1)
pca = predict(pca, ret)
ret = xts(ret, order.by = data[-1])
plot(pca)
plot(pca$V1)
plot(pca$V1, type=l)
plot(pca$V1, type='l')
View(ret)
data = seq(as.Date("2000-1-1"), as.Date("2020-3-1"), by = "month")
ret = xts(ret, order.by = data)
ret = xts(ret, order.by = data[-1])
pca = xts(pca, order.by = data[-1])
plot(pca$V1, type='l')
ret = data.frame(matrix(nrow =(nl-1), ncol=length(assets)))
for(i in 1:length(assets)){
ret[ ,i] = diff(log(df[,i]))
}
colnames(ret) = assets
pca = preProcess(x= ret, method = 'pca', pcaComp = 1)
pca = predict(pca, ret)
basicStats(ret$VALE3.SA)
data = seq(as.Date("2000-2-1"), as.Date("2020-4-1"), by = "month")
basicStats(data)
View(df)
df = data.frame(lapply(assets, get_data))
basicStats(df)
for(i in 1:length(df)){
df[ ,i] = ifelse(is.na(df[,i]),
(mean(df[,i], na.rm = T)),
df[,i] )
}
basicStats(df)
nl = sum((df[,1]>0)*1)
df[nl,]
View(df)
f = df[-nl,]
View(f)
df = df[-nl,]
nl = sum((df[,1]>0)*1)
ret = data.frame(matrix(nrow =(nl-1), ncol=length(assets)))
for(i in 1:length(assets)){
ret[ ,i] = diff(log(df[,i]))
}
colnames(ret) = assets
library(caret)
pca = preProcess(x= ret, method = 'pca', pcaComp = 1)
pca = predict(pca, ret)
data = seq(as.Date("2000-2-1"), as.Date("2020-4-1"), by = "month")
ret = xts(ret, order.by = data)
pca = xts(pca, order.by = data)
plot(pca$V1, type='l')
plot(ret)
plot(ret)
plot(ret$VALE3.SA)
plot(pca$V1, type='l')
setwd("D:/Git projects/Finance/Finance_R")
saveRDS(pca)
saveRDS(pca, 'pca.rds')
readRDS('pca.rds')
